{"tasks":[{"id":"1","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА) заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150. Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ) нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\nисполнителя при этом не изменяется.\n Цикл\n    ПОКА условие\n        последовательность команд\n    КОНЕЦ ПОКА\n выполняется, пока условие истинно.\n В конструкции\n    ЕСЛИ условие\n        ТО команда1\n        ИНАЧЕ команда2\n    КОНЕЦ ЕСЛИ\n выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nКакая строка получится в результате применения приведённой ниже программы к строке, состоящей из 68 идущих подряд цифр 8? В ответе запишите полученную строку.\n НАЧАЛО\n ПОКА нашлось (222) ИЛИ нашлось (888)\n    ЕСЛИ нашлось (222)\n        ТО заменить (222, 8)\n        ИНАЧЕ заменить (888, 2)\n    КОНЕЦ ЕСЛИ\n КОНЕЦ ПОКА\n КОНЕЦ","answer":"28","description":"Данный алгоритм сначала заменит 9 первых восьмерок на три двойки а затем заменит эти три двойки обратно на одну восьмерку. То есть за четыре повторения цикла из строки убирается 8 восьмерок. За восемь таких групп по четыре повторения, то есть за 8 · 4 = 32 повторения цикла из строки уберется 8 · 8 = 64 восьмерки, и останется 4 восьмерки. Первые три из них будут заменены на двойку.\nРешение задачи на языке Python:","python":"s='8'*68\nwhile ('222' in s) or ('888' in s):\n    if ('222' in s):\n        s=s.replace ('222','8',1)\n    else:\n        s=s.replace ('888','2',1)\nprint(s)\n"},{"id":"2","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\nисполнителя при этом не изменяется.\nЦикл\n    ПОКА условие\n        последовательность команд\n    КОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно).\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n        ИНАЧЕ команда2\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nДана программа для редактора:\nНАЧАЛО\n    ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)\n        заменить (01, 2302)\n        заменить (02, 10)\n        заменить (03, 201)\n    КОНЕЦ ПОКА\nКОНЕЦ\nИзвестно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки. После выполнения данной программы получилась строка, содержащая 40 единиц, 10 двоек и 8 троек. Сколько единиц было в исходной строке?","answer":"6","description":"Заметим, что порядок цифр в исходной строке не важен. Из строки «01» сначала получается строка «2302», а потом получается строка «2310». Строка «02» преобразуется в строку «10». Строка «03» сначала преобразуется в строку «201», затем преобразуется в строку «22302», после чего получается строка «22310».\nЗаметим, что после преобразования исходной строки получилась строка, содержащая 8 троек. Если в исходной строке было 8 единиц, тогда в получившейся строке будет 8 троек и 8 двоек, что не подходит, поскольку двоек должно быть 10. Если в исходной строка было 7 единиц, тогда в получившейся строке будет 7 троек и 7 двоек, этот вариант тоже не подходит, поскольку при добавлении в исходную строку троек в получившейся в результате преобразований строке будет только 9 двоек. Если в исходной строке было 6 единиц, то после преобразования получится шесть единиц, шесть двоек и шесть троек. Далее, добавим к исходной строке две тройки. Тогда после преобразования строки, состоящей из нуля, шести единиц и двух троек получится строка, состоящая из восьми единиц, десяти двоек и восьми троек. Остальные цифры в исходной строке  — двойки.\nТаким образом, в исходной строке было шесть единиц.\nРешение задачи на языке Python:","python":"for k1 in range(50):\n    for k2 in range(50):\n        for k3 in range(50):\n            s='0'+k1*'1'+k2*'2'+k3*'3'\n            while '01' in s or '02' in s or '03' in s:\n                s=s.replace('01','2302',1)\n                s=s.replace('02','10',1)\n                s=s.replace('03','201',1)\n            if s.count('1')==40 and s.count('2')==10 and s.count('3')==8:\n                print (k1)\n"},{"id":"3","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nзаменить (v, w)\nнашлось (v)\nДана программа для исполнителя Редактор:\nНАЧАЛО\nПОКА нашлось (19) ИЛИ нашлось (299) ИЛИ нашлось (3999)\nЕСЛИ нашлось (19)\nТО заменить (19, 2)\nКОНЕЦ ЕСЛИ\nЕСЛИ нашлось (299)\nТО заменить (299, 3)\nКОНЕЦ ЕСЛИ\nЕСЛИ нашлось (3999)\nТО заменить (3999, 1)\nКОНЕЦ ЕСЛИ\nКОНЕЦ ПОКА\nКОНЕЦ\nКакая строка получится в результате применения приведённой ниже программы к строке, состоящей из \"1\" и 100 идущих подряд цифр \"9\"? В ответе запишите полученную строку.","answer":"39","description":"Данный алгоритм сначала заменит 19 на 2, затем 299 на 3, затем 3999 на 1. То есть, на каждом шаге алгоритма удаляются шесть девяток.\nТак как 100 девяток образуют 16 групп по 6 девяток и ещё 4 девятки, получим строку: 19999 девяток.\nПоследние преобразования строки: 19999 → 2999 → 39.\nРешение задачи на языке Python:","python":"s = '1' + '9' * 100\nwhile ('19' in s) or ('299' in s) or ('3999' in s):\n    if '19' in s:\n        s = s.replace('19', '2', 1)\n    if '299' in s:\n        s = s.replace('299', '3', 1)\n    if '3999' in s:\n        s = s.replace('3999', '1', 1)\nprint(s)\n"},{"id":"4","text":"Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\nЦикл\nПОКА условие\n    последовательность команд\nКОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nКакая строка получится в результате применения приведённой ниже программы к строке, состоящей из 84 единиц?\nНАЧАЛО\n    ПОКА нашлось (11111)\n        заменить (222, 1)\n        заменить (111, 2)\n    КОНЕЦ ПОКА\nКОНЕЦ","answer":"222111","description":"Данный алгоритм сначала заменит девять первых единиц на три двойки, а затем заменит эти три двойки на одну единицу, после чего алгоритм заменит эту единицу и следующие за ней две единицы на двойку. То есть, одиннадцать подряд идущих единиц заменяются на строку 2. Далее ещё 22 единицы заменятся на строку 22. После этого три подряд идущих двойки заменятся на единицу, которая вместе со следующими после неё двумя единицами заменятся на двойку. Таким образом, останется строка из двойки и 49 единиц.\nДалее алгоритм заменит ещё 22 единицы на две двойки. После этого строка 222 заменится на единицу, которая вместе со следующими после неё двумя единицами заменятся на двойку. Таким образом, останется строка из двойки и 17 единиц. Далее алгоритм заменит 11 единиц на двойку и останется строка из двух двоек и 6 единиц. После этого ещё три единицы заменятся на двойку. Таким образом, после применения данного алгоритма к строке из 84 единиц, останется строка 222111. Для этой строки не выполняется условие «нашлось (11111)», следовательно, выполнение программы заканчивается.\nРешение задачи на языке Python:","python":"s = '1' * 84\nwhile '11111' in s:\n    s = s.replace('222', '1', 1)\n    s = s.replace('111', '2', 1)\nprint(s)\n"},{"id":"5","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\nисполнителя при этом не изменяется.\nЦикл\n    ПОКА условие\n        последовательность команд\n    КОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно).\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n        ИНАЧЕ команда2\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nДана программа для Редактора:\nНАЧАЛО\nПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)\n    ЕСЛИ нашлось (>1)\n    ТО заменить (>1, 22>)\n    КОНЕЦ ЕСЛИ\n    ЕСЛИ нашлось (>2)\n    ТО заменить (>2, 2>)\n    КОНЕЦ ЕСЛИ\n    ЕСЛИ нашлось (>3)\n    ТО заменить (>3, 1>)\n    КОНЕЦ ЕСЛИ\nКОНЕЦ ПОКА\nКОНЕЦ\nНа вход приведённой ниже программе поступает строка, начинающаяся с символа «>», а затем содержащая 26 цифр 1, 10 цифр 2 и 14 цифр 3, расположенных в произвольном порядке.\nОпределите сумму числовых значений цифр строки, получившейся в результате выполнения программы. Так, например, если результат работы программы представлял бы собой строку, состоящую из 50 цифр 4, то верным ответом было бы число 200.","answer":"138","description":"Данный алгоритм заменит 26 цифр \"1\" на 52 цифры \"2\", пройдёт 10 цифр \"2\", не изменяя строку и заменит 14 цифр \"3\" на 14 цифр \"1\".\nТаким образом, сумма числовых значений цифр строки, получившейся в результате выполнения программы равна 2 · 62 + 1 · 14  =  138.\nРешение задачи на языке Python:","python":"s = '>' + '1' * 26 + '2' * 10 + '3' * 14\nwhile ('>1' in s) or ('>2' in s) or ('>3' in s):\n    if '>1' in s:\n        s = s.replace('>1', '22>', 1)\n    if '>2' in s:\n        s = s.replace('>2', '2>', 1)\n    if '>3' in s:\n        s = s.replace('>3', '1>', 1)\nprint('сумма цифр:', s.count('1') + s.count('2') * 2)\n"},{"id":"6","text":"Исполнитель Редактор получает на вход строку цифр и преобразует её.\nРедактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w<).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\nЦикл\nПОКА условие\nпоследовательность команд\nКОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\nЕСЛИ условие\nТО команда1\nИНАЧЕ команда2\nКОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nКакая строка получится в результате применения приведённой ниже программы к строке, состоящей из 85 идущих подряд цифр 7? В ответе запишите полученную строку.\nНАЧАЛО\nПОКА нашлось (333) ИЛИ нашлось (777)\nЕСЛИ нашлось (333)\nТО заменить (333, 7)\nИНАЧЕ заменить (777, 3)\nКОНЕЦ ЕСЛИ\nКОНЕЦ ПОКА\nКОНЕЦ","answer":"377","description":"Данный алгоритм сначала заменит 9 первых семерок на три тройки, а затем заменит эти три тройки обратно на одну семерку. То есть, девять подряд идущих семерок заменяются на одну. Так из 81 семерок получим 9 групп по 9 семерок и еще четыре семерки, всего 13. Снова заменится еще одна группа из 9 семерок, останется 5 семерок. Три первых семерки будут заменены на одну тройку, и останется строка 377.\nРешение задачи на языке Python:","python":"s = '7' * 85\nwhile ('333' in s) or ('777' in s):\n    if '333' in s:\n        s = s.replace('333', '7', 1)\n    else:\n        s = s.replace('777', '3', 1)\nprint(s)\n"},{"id":"7","text":"Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\nЦикл\nПОКА условие\n    последовательность команд\nКОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nКакая строка получится в результате применения приведённой ниже программы к строке, состоящей из 98 единиц?\nНАЧАЛО\n    ПОКА нашлось (1111)\n        заменить (1111, 22)\n        заменить (222, 1)\n    КОНЕЦ ПОКА\nКОНЕЦ","answer":"12","description":"Данный алгоритм сначала заменит восемь первых единицы на четыре двойки, а затем заменит эти четыре двойки на одну единицу и двойку. То есть, восемь подряд идущих единиц заменяются на строку 12. Далее ещё четыре единицы заменятся на две двойки, после чего 12221..1 заменится на 111..1. Другими словами, первые 12 единиц заменятся на 2 единицы.\nДалее алгоритм заменит 8 групп по 12 единиц и останется строка из 18 единиц. После этого первые 12 единиц заменятся на две и останется последовательность из восьми единиц. Далее восемь единиц заменяются на строку 2222, и первые три двойки заменятся на 1, получится строка 12.\n(Заметим, что команда \"заменить (222, 1)\" выполняется непосредственно после команды \"заменить (1111, 22)\" независимо от того, есть ли к этому времени в обрабатываемой строке четыре единицы). \nРешение задачи на языке Python:","python":"s = '1' * 98\nwhile '1111' in s:\n    s = s.replace('1111', '22', 1)\n    s = s.replace('222', '1', 1)\nprint(s)\n"},{"id":"8","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\nисполнителя при этом не изменяется.\nЦикл\n    ПОКА условие\n        последовательность команд\n    КОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно).\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n        ИНАЧЕ команда2\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nДана программа для редактора:\nНАЧАЛО\n    ПОКА нашлось (01) ИЛИ нашлось (02) ИЛИ нашлось (03)\n        заменить (01, 30)\n        заменить (02, 101)\n        заменить (03, 202)\n    КОНЕЦ ПОКА\nКОНЕЦ\nИзвестно, что исходная строка начиналась с нуля, а далее содержала только единицы, двойки и тройки. После выполнения данной программы получилась строка, содержащая 15 единиц, 10 двоек и 60 троек. Сколько единиц было в исходной строке?","answer":"45","description":"Заметим, что порядок цифр в исходной строке не важен. Из строки «01» получается строка «30». Строка «02» сначала преобразуется в строку «101», а затем получается строка «130». Строка «03» сначала преобразуется в строку «202», затем преобразуется в строку «2101», после чего получается строка «2130».\nЗаметим, что после преобразования исходной строки получилась строка, содержащая 10 двоек. Значит, в исходной строке должно содержаться 10 троек, поскольку только строка «03» после всех преобразований в получившейся подстроке содержит двойку. Таким образом, если исходная строка начинается с нуля, а далее содержит 10 троек, то получившаяся строка будет содержать 10 двоек, 10 единиц и 10 троек.\nПоскольку строка после выполнения также должна содержать 15 единиц, в исходной строке, помимо 10 троек, должно содержаться ещё 5 двоек, поскольку строка «02» преобразуется в строку «130».\nТогда, чтобы получившаяся строка содержала 60 троек, она также должна содержать ещё 45 единиц, поскольку строка «01» преобразуется в строку «30».\nРешение задачи на языке Python:","python":"for x in range(50):\n    for y in range(50):\n        for z in range(50):\n            num = '0' + '1' * x + '2' * y + '3' * z\n            while '01' in num or '02' in num or '03' in num:\n                num = num.replace('01', '30', 1)\n                num = num.replace('02', '101', 1)\n                num = num.replace('03', '202', 1)\n            if num.count('1') == 15 and num.count('2') == 10 and num.count('3') == 60:\n                print(x)\n"},{"id":"9","text":"Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\nЦикл\nПОКА условие\n    последовательность команд\nКОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nКакая строка получится в результате применения приведённой ниже программы к строке, состоящей из 77 единиц?\nНАЧАЛО\n    ПОКА нашлось (111)\n        заменить (111, 2)\n        заменить (222, 3)\n        заменить (333, 1)\n    КОНЕЦ ПОКА\nКОНЕЦ","answer":"33221","description":"Данный алгоритм сначала заменит девять первых единиц на три двойки, а затем заменит эти три двойки на одну тройку. После этого алгоритм заменит ещё 18 единиц на две тройки и останется строка из 51 единицы. Далее алгоритм заменит ещё 27 единиц на одну и останется строка из 25 единиц. После этого первые восемнадцать единиц заменятся на две тройки и останется строка 331111111. Далее ещё шесть единиц заменятся на две двойки и останется строка 33221.\nРешение задачи на языке Python:","python":"s = '1' * 77\nwhile '111' in s:\n    s = s.replace('111', '2', 1)\n    s = s.replace('222', '3', 1)\n    s = s.replace('333', '1', 1)\nprint(s)\n"},{"id":"10","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\nисполнителя при этом не изменяется.\nЦикл\n    ПОКА условие\n        последовательность команд\n    КОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно).\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n        ИНАЧЕ команда2\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nДана программа для редактора:\nНАЧАЛО\n    ПОКА нашлось (111) или нашлось (88888)\n        ЕСЛИ нашлось (111)\n            ТО заменить (111, 88)\n            ИНАЧЕ заменить (88888, 8)\n        КОНЕЦ ЕСЛИ\n    КОНЕЦ ПОКА\nКОНЕЦ\nНа вход программе подана строка из 100 единиц. Какая строка будет получена исполнителем после выполнения данного алгоритма?","answer":"881","description":"Заметим, что по приоритету сначала заменяется 111 на 88, и только если в строке нет 111, то 88888 заменяется на 8. Значит, 99 единиц сначала заменятся на 33⸱2 восьмерки. Получим строку, вида 888…8881. Операция замены 88888 на 8 удаляет из строки 4 восьмерки. Имеем 66  =  16 · 4 + 2. Следовательно, после преобразования получим строку 881.\nРешение задачи на языке Python:","python":"s = '1'*100\nwhile '111' in s or '88888' in s:\n    if '111' in s:\n        s = s.replace('111', '88', 1)\n    else:\n        s = s.replace('88888', '8', 1)\nprint(s)\n"},{"id":"11","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\nисполнителя при этом не изменяется.\nЦикл\n    ПОКА условие\n        последовательность команд\n    КОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно).\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n        ИНАЧЕ команда2\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nНа вход приведённой ниже программе поступает строка, начинающаяся с символа «>», а затем содержащая 10 цифр 1, 20 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.\nОпределите сумму числовых значений цифр строки, получившейся в результате выполнения программы.\nТак, например, если результат работы программы представлял бы собой строку, состоящую из 50 цифр 4, то верным ответом было бы число 200.\nНАЧАЛО\nПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)\n    ЕСЛИ нашлось (>1)\n        ТО заменить (>1, 22>)\n    КОНЕЦ ЕСЛИ\n    ЕСЛИ нашлось (>2)\n        ТО заменить (>2, 2>)\n    КОНЕЦ ЕСЛИ\n    ЕСЛИ нашлось (>3)\n        ТО заменить (>3, 1>)\n    КОНЕЦ ЕСЛИ\nКОНЕЦ ПОКА\nКОНЕЦ","answer":"110","description":"Заметим, что расположение цифр в исходной строке не влияет на результат. Данный алгоритм сначала заменит 10 цифр \"1\" на 20 цифр \"2\". Далее пройдёт 20 цифр \"2\", не изменяя строку. После этого данный алгоритм заменит 30 цифр \"3\" на 30 цифр \"1\".\nТаким образом, сумма числовых значений цифр строки, получившейся в результате выполнения программы равна 2 · 40 + 1 · 30  =  110.\nРешение задачи на языке Python:","python":"s = '>' + '1' * 10 + '2' * 20 + '3' * 30\nwhile ('>1' in s) or ('>2' in s) or ('>3' in s):\n    if '>1' in s:\n        s = s.replace('>1', '22>', 1)\n    if '>2' in s:\n        s = s.replace('>2', '2>', 1)\n    if '>3' in s:\n        s = s.replace('>3', '1>', 1)\nprint('сумма цифр:', s.count('1') + s.count('2') * 2)\n"},{"id":"12","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (555, 63)\nпреобразует строку 12555550 в строку 1263550.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\n  Цикл\n  ПОКА условие\n      последовательность команд\n  КОНЕЦ ПОКА\n  выполняется, пока условие истинно.\n  В конструкции\n  ЕСЛИ условие\n      ТО команда1\n      ИНАЧЕ команда2\n  КОНЕЦ ЕСЛИ\n  выполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nКакая строка получится в результате применения приведённой ниже программы к строке, состоящей из 1000 идущих подряд цифр 8? В ответе запишите полученную строку.\nНАЧАЛО\nПОКА нашлось (999) ИЛИ нашлось (888)\n  ЕСЛИ нашлось (888)\n    ТО заменить (888, 9)\n    ИНАЧЕ заменить (999, 8)\n  КОНЕЦ ЕСЛИ\nКОНЕЦ ПОКА\nКОНЕЦ","answer":"8998","description":"Данный алгоритм сначала заменит все триады из восьмёрок на девятки. Заметим, что 1000 восьмёрок образуют 333 триады и остаётся ещё одна восьмёрка. То есть получится 333 девятки и одна восьмёрка.\nЗатем алгоритм заменит 9 первых девяток на три восьмёрки, а затем заменит эти три восьмёрки обратно на одну девятку. То есть за четыре прохода цикла из начала строки убирается 8 девяток.\nТаким образом, из строки, содержащей 333 девятки, уберется 8 · 41=328 девяток, и останется 5 девяток и одна восьмёрка. Три первых девятки будут заменены на одну восьмёрку, и останется строка 8998.\nРешение задачи на языке Python:","python":"s = '8' * 1000\nwhile ('999' in s) or ('888' in s):\n    if '888' in s:\n        s = s.replace('888', '9', 1)\n    else:\n        s = s.replace('999', '8', 1)\nprint(s)\n"},{"id":"13","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить(v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить(111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить(v, w) не меняет эту строку.\nБ)  нашлось(v)\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\nЦикл\n    ПОКА условие\n        последовательность команд\n    КОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно).\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n        ИНАЧЕ команда2\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nОпределите количество нулей в строке, получившейся в результате применения приведённой ниже программы к входной строке, состоящей из единицы, за которой следуют 80 нулей подряд. В ответе запишите только количество нулей в получившейся строке.\nНАЧАЛО\nПОКА нашлось (10) ИЛИ нашлось (1)\n    ЕСЛИ нашлось (10)\n        ТО заменить (10, 001)\n    ИНАЧЕ\n        ЕСЛИ нашлось(1)\n             ТО заменить (1, 000)\n        КОНЕЦ ЕСЛИ\n    КОНЕЦ ЕСЛИ\nКОНЕЦ ПОКА\nКОНЕЦ","answer":"163","description":"Рассмотрим пример.\nВозьмём исходную комбинацию 100. Далее 10 заменим на 001, получится 0010. Потом еще раз, получим 00001. И на последнем шаге 1 заменим на 000. В итоге получается 0000000.\nСделаем вывод: на каждом шаге в строчке добавляются два нуля слева от единицы и удаляется один нуль справа от неё. Число нулей удвоилось. Последним шагом единица заменяется на три нуля.\nПрименим этот алгоритм на комбинацию с единицей и 80 нулями. На предпоследнем шаге нули удвоятся 80 * 2 = 160, то есть будет строка из 160 нулей и одна единица. Последняя единица заменится на три нуля. Таким образом, нулей будет 160 + 3 = 163.\nРешение задачи на языке Python:","python":"s = '1' + '0' * 80\nwhile ('10' in s) or ('1' in s):\n    if '10' in s:\n        s = s.replace('10', '001', 1)\n    elif '1' in s:\n        s = s.replace('1', '000')\nprint(s.count('0'))\n"},{"id":"14","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\nЦикл\n  ПОКА условие\n    последовательность команд\n  КОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\n  ЕСЛИ условие\n    ТО команда1\n    ИНАЧЕ команда2\n  КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно)\nНиже приведена программа для исполнителя Редактор.\nНАЧАЛО\nПОКА нашлось (133) ИЛИ нашлось (881)\n  ЕСЛИ нашлось (133)\n    ТО заменить (133, 81)\n      ИНАЧЕ заменить (881, 13)\n  КОНЕЦ ЕСЛИ\nКОНЕЦ ПОКА\nКОНЕЦ\nНа вход этой программе подается строка, состоящая из 100 цифр; последняя цифра в строке  — цифра 1, а остальные цифры  — восьмёрки. Какая строка получится в результате применения программы к этой строке? В ответе запишите полученную строку.","answer":"813","description":"По ходу работы программы строка будет меняться так: ...8881 → ...88813 → ...888133 → ...8881\nПри этом за 3 итерации цикла будет убираться 2 + 2 - 1 = 3 восьмёрки.\nТогда после 32 раз по 3 итерации, то есть после 96 итераций, из строки будет убрано 32 умножить на 3 = 96 восьмёрок и она примет вид 8881. После чего цикл отработает ещё один раз и заменит 8881 на 813.\nРешение задачи на языке Python:","python":"s = '8' * 99 + '1'\nwhile ('133' in s) or ('881' in s):\n    if '133' in s:\n        s = s.replace('133', '81', 1)\n    else:\n        s = s.replace('881', '13', 1)\nprint(s)\n"},{"id":"15","text":"Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w.\nНапример, выполнение команды\nзаменить (111, 27) преобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)   нашлось (v). Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\nЦикл \n        ПОКА  условие      \n              последовательность команд  \n        КОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\n        ЕСЛИ  условие      \n              ТО команда 1\n              ИНАЧЕ команда 2\n        КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nКакая строка получится в результате применения приведённой ниже программы к строке длины 101, в которой первый и последний символ – это цифры 1, а остальные символы – цифры 8?\nВ ответе запишите полученную строку.\nНАЧАЛО      \n       ПОКА  нашлось (81) ИЛИ нашлось (882) ИЛИ нашлось (8883)            \n           ЕСЛИ  нашлось (81)            \n                ТО заменить (81, 2)           \n                ИНАЧЕ ЕСЛИ  нашлось (882)                \n                                 ТО заменить (882, 3)        \n                                 ИНАЧЕ заменить (8883, 1)                 \n                КОНЕЦ ЕСЛИ         \n           КОНЕЦ ЕСЛИ     \n       КОНЕЦ ПОКА \n КОНЕЦ","answer":"13","description":"Первым делом алгоритм преобразует строку к в виду 18......2 (81 в конце заменится на 2), потом 882 заменится на 3. Потом 8883 заменится на 1. То есть строка превратится в исходную, но сократится на 6 восьмерок. В итоге это сокращение произойдет 16 раз и останется 18881. Эта строка изменится на 1882, а 1882 изменится на 13.\nРешение задачи на языке Python:","python":"s = '1' + '8' * 99 + '1'\nwhile ('81' in s) or ('882' in s) or ('8883' in s):\n    if '81' in s:\n        s = s.replace('81', '2', 1)\n    elif '882' in s:\n        s = s.replace('882', '3', 1)\n    else:\n        s = s.replace('8883', '1', 1)\nprint(s)\n"},{"id":"16","text":"Исполнитель Редактор получает на вход строку цифр и преобразует её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\nЦикл\nПОКА условие\n    последовательность команд\nКОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nКакая строка получится в результате применения приведённой ниже программы к строке вида 1…12…2 (45 единиц и 45 двоек)?\nНАЧАЛО\nПОКА нашлось (111)\n    заменить (111, 2)\n    заменить (222, 1)\nКОНЕЦ ПОКА\nКОНЕЦ","answer":"12","description":"Рассмотрим, как алгоритм преобразовывает первую половину строки. За первые два прохода цикла первые шесть единиц заменяются на две двойки. Затем на третьем проходе алгоритма три единицы заменяются ещё на одну двойку и три появившиеся в начале двойки заменяются на одну единицу. При этом за три таких цикла во второй половине строки шесть двоек заменяются на две единицы. Таким образом, из строки удаляется шесть единиц и шесть двоек. После семи троек циклов останется строка 111222. Затем выполнится последний цикл: сначала три единицы заменятся на двойку и получится 2222, затем первые три двойки заменятся на единицу и получится строка 12.\nРешение задачи на языке Python:","python":"s = '1' * 45 + '2' * 45 \nwhile '111' in s:\n    s = s.replace('111', '2', 1)\n    s = s.replace('222', '1', 1)\nprint(s)\n"},{"id":"17","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка\nисполнителя при этом не изменяется.\nЦикл\n    ПОКА условие\n        последовательность команд\n    КОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно).\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n        ИНАЧЕ команда2\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nНа вход приведённой ниже программе поступает строка, начинающаяся с символа «>», а затем содержащая 11 цифр 1, 12 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.\nОпределите сумму числовых значений цифр строки, получившейся в результате выполнения программы.\nТак, например, если результат работы программы представлял бы собой строку, состоящую из 50 цифр 4, то верным ответом было бы число 200.\nНАЧАЛО\nПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)\n    ЕСЛИ нашлось (>1)\n        ТО заменить (>1, 22>)\n    КОНЕЦ ЕСЛИ\n    ЕСЛИ нашлось (>2)\n        ТО заменить (>2, 2>)\n    КОНЕЦ ЕСЛИ\n    ЕСЛИ нашлось (>3)\n        ТО заменить (>3, 1>)\n    КОНЕЦ ЕСЛИ\nКОНЕЦ ПОКА\nКОНЕЦ","answer":"98","description":"Данный алгоритм заменит 11 цифр \"1\" на 22 цифры \"2\", пройдёт 12 цифр \"2\", не изменяя строку и заменит 30 цифр \"3\" на 30 цифр \"1\".\nТаким образом, сумма числовых значений цифр строки, получившейся в результате выполнения программы равна 2 · 34 + 1 · 30  =  98.\nРешение задачи на языке Python:","python":"a=0\ns= '>' + '1'* 11 + '2'* 12 + '3'* 30\nwhile ('>1' in s) or ('>2' in s) or ('>3' in s):\n    if '>1' in s:\n        s=s.replace ('>1', '22>', 1)\n    if '>2' in s:\n        s=s.replace ('>2', '2>', 1)\n    if '>3' in s:\n        s=s.replace ('>3', '1>', 1)\nprint (s)\na=s.count('1', 0, len(s))\nb=s.count('2', 0, len(s))\nprint('1:', a)\nprint ('2:', b)\nprint('сумма цифр:', a+b*2)\n"},{"id":"18","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды\nзаменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\nЦикл\n    ПОКА условие\n        последовательность команд\n    КОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\n    ЕСЛИ условие\n        ТО команда1\n        ИНАЧЕ команда2\n    КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nКакая строка получится в результате применения приведённой ниже программы к строке, состоящей из 69 идущих подряд цифр 8? В ответе запишите полученную строку.\nНАЧАЛО\nПОКА нашлось (3333) ИЛИ нашлось (8888)\n    ЕСЛИ нашлось (3333)\n        ТО заменить (3333, 88)\n        ИНАЧЕ заменить (8888, 33)\n    КОНЕЦ ЕСЛИ\nКОНЕЦ ПОКА\nКОНЕЦ","answer":"888","description":"Сначала данный алгоритм дважды заменит четыре первые восьмёркина две тройки, а затем заменит полученные четыре тройки на две восьмёрки. То есть, восемь подряд идущих восьмёрок заменяются на две.\nТак как 69 восьмёрок образуют 8 групп по 8 восьмёрок и ещё пять восьмёрок, получим 21 восьмёрку. Снова заменится еще две группы из восьми восьмёрок, итого осталось 9 восьмёрок. Последний октет из восьмёрок превратится в две восьмёрки, получится строка 888.\nРешение задачи на языке Python:","python":"s = '8' * 69 \nwhile ('3333' in s) or ('8888' in s):\n    if '3333' in s:\n        s = s.replace('3333', '88', 1)\n    else:\n        s = s.replace('8888', '33', 1)\nprint(s)\n"},{"id":"19","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\nЦикл\n  ПОКА условие\n    последовательность команд\n  КОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\n  ЕСЛИ условие\n    ТО команда1\n    ИНАЧЕ команда2\n  КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nКакая строка получится в результате применения приведённой ниже программы к строке, состоящей из 125 идущих подряд цифр 8? В ответе запишите полученную строку.\nНАЧАЛО\nПОКА нашлось (333) ИЛИ нашлось (888)\n  ЕСЛИ нашлось (333)\n    ТО заменить (333, 8)\n    ИНАЧЕ заменить (888, 3)\n  КОНЕЦ ЕСЛИ\nКОНЕЦ ПОКА\nКОНЕЦ","answer":"388","description":"По ходу работы программы строка будет меняться так: 8888... → 38888... → 338888... → 3338888... → 8888...\nПри этом за каждые 4 итерации цикла будет убираться 3 + 3 + 3 - 1 = 8 восьмёрок.\nТогда после 15 раз по 4 итерации, то есть после 60 итераций, из строки будет убрано 15 умножить на 8 = 120 восьмёрок и она примет вид 88888. После чего цикл отработает ещё раз и заменит 88888 на 388.\n \nРешение задачи на языке Python:","python":"s='8'*125\nwhile ('333' in s) or ('888' in s):\n    if '333' in s:\n        s=s.replace('333','8',1) \n    else:\n        s=s.replace('888','3',1)\nprint(s)\n"},{"id":"20","text":"Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.\nА)  заменить (v, w).\nЭта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды\nзаменить (111, 27)\nпреобразует строку 05111150 в строку 0527150.\nЕсли в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.\nБ)  нашлось (v).\nЭта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.\nЦикл\n  ПОКА условие\n    последовательность команд\n  КОНЕЦ ПОКА\nвыполняется, пока условие истинно.\nВ конструкции\n  ЕСЛИ условие\n    ТО команда1\n    ИНАЧЕ команда2\n  КОНЕЦ ЕСЛИ\nвыполняется команда1 (если условие истинно) или команда2 (если условие ложно).\nНиже приведена программа для исполнителя Редактор.\nНАЧАЛО\nПОКА нашлось (722) ИЛИ нашлось (557)\n  ЕСЛИ нашлось (722)\n    ТО заменить (722, 57)\n    ИНАЧЕ заменить (557, 72)\n  КОНЕЦ ЕСЛИ\nКОНЕЦ ПОКА\nКОНЕЦ\nНа вход этой программе подается строка, состоящая из 55 цифр; последняя цифра в строке  — цифра 7, а остальные цифры  — пятёрки. Какая строка получится в результате применения программы к этой строке? В ответе запишите полученную строку.","answer":"572","description":"Строка содержит 54 пятерки и семерку.\nПо ходу работы программы строка будет меняться так: ...5557 → ...55572 → ...555722 → ...5557\nПри этом за 3 итерации цикла будет убираться 2 + 2 - 1 = 3 пятёрки.\nТогда после 17 раз по 3 итерации, то есть после 51 итераций, из строки будет убрано 17 умножить на 3 = 51 пятёрка и она примет вид 5557. После чего цикл отработает ещё один раз и заменит 5557 на 572.\nРешение задачи на языке Python:","python":"s = '5' * 54 + '7'\nwhile ('722' in s) or ('557' in s):\n    if '722' in s:\n        s = s.replace('722', '57', 1)\n    else:\n        s = s.replace('557', '72', 1)\nprint(s)"}]}