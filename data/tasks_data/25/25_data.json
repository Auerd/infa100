{"tasks":[{"id":"1","text":"Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:\n— символ «?» означает ровно одну произвольную цифру;\n— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.\nНапример, маске 123*4?5 соответствуют числа 123405 и 12300405.\nСреди натуральных чисел, не превышающих 1010, найдите все числа, соответствующие маске 1?2139*4, делящиеся на 2023 без остатка. В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце  — соответствующие им результаты деления этих чисел на 2023.\n \nКоличество строк в таблице для ответа избыточно.","answer":"162139404 80148\n1321399324 653188\n1421396214 702618\n1521393104 752048","description":"Переберём все числа от 2023 до 1010, с шагом в 2023. Таким образом, каждое рассматриваемое число будет кратно 2023, необходимо только добавить проверку на соответствие очередного числа маске 1?2139*4.","python":"for i in range(2023,10**10, 2023):\n    if (i%10==4) and (str(i)[2:6] == '2139') and (str(i)[0] == '1'):\n        print(i, i//2023)\n"},{"id":"2","text":"Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [125 256; 125 330], числа, имеющие ровно шесть различных чётных натуральных делителей. Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки. Делители в строке должны следовать в порядке возрастания.\nНапример, в диапазоне [2; 48] ровно шесть чётных различных натуральных делителей имеют числа 24, 36 и 40, поэтому для этого диапазона вывод на экране должна содержать следующие значения:\n2 4 6 8 12 24\n2 4 6 12 18 36\n2 4 8 10 20 40","answer":"2 6 18 13918 41754 125262\n2 4 8 31322 62644 125288\n2 6 18 13922 41766 125298","description":"Решим задачу перебором. Будем проверять количество делителей каждого числа из диапазона, если их количество равно шесть  — записываем их в двумерный массив d. После этого выводим эти делители на экран в новой строке.","python":"for num in range(125256, 125331):\n    d = []\n    for j in range(1, int(num**0.5) + 1):\n        if num % j == 0:\n            if j % 2 == 0:\n                d.append(j)\n            if num//j % 2 == 0 and num//j != j:\n                d.append(num//j)\n    if len(d) == 6:\n        d.sort()\n        print(d[0], d[1], d[2], d[3], d[4], d[5])\n"},{"id":"3","text":"Пусть M(N)  — произведение 5 наименьших различных натуральных делителей натурального числа N, не считая единицы. Если у числа N меньше 5 таких делителей, то M(N) считается равным нулю.\nНайдите 5 наименьших натуральных чисел, превышающих 200 000 000, для которых 0 < M(N) < N. В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.","answer":"1728\n21632\n1260\n1152\n4127787","description":"Будем последовательно рассматривать каждое целое число, большее 200 000 000. В каждом таком числе будем находить первые 5 натуральных делителей, умножая их между собой, если результат произведения не будет превышать значения самого числа. Если результат произведения первых 5 натуральных делителей числа, не считая единицы, будет меньше самого числа, будем выводить результат произведения на экран.","python":"zn=[]\nfor x in range(200000001,200000100):\n    de=set()  \n    for d in range(1,round(x**0.5)+1):\n        if x%d==0:\n            de.add(d)\n            de.add(x//d)\n    if len(de)>5:\n        de=sorted(de)\n        p=de[5]*de[1]*de[2]*de[3]*de[4]\n        if p<x:\n            zn.append(p)\nprint((zn)[:5])\n"},{"id":"4","text":"Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу. Например, у числа 6 есть два нетривиальных делителя: 2 и 3. Найдите все натуральные числа, принадлежащие отрезку [289123456; 389123456] и имеющие ровно три нетривиальных делителя. Для каждого найденного числа запишите в ответе его наибольший нетривиальный делитель. Ответы расположите в порядке возрастания.\nНапример, в диапазоне [5; 16] ровно три различных натуральных делителя имеет число 16, поэтому для этого диапазона вывод на экране должна содержать следующие значения:\n16 8","answer":"294499921 2248091\n352275361 2571353\n373301041 2685619","description":"Если решать задачу перебором  — программа будет существенно неэффективна по времени. Заметим, что у каждого делителя числа имеется пара, например, пары делителей числа 16 будут выглядеть так: 1 и 16, 2 и 8, 4 и 4, всего пять различных делителей. Отсюда можно заключить, что имеет смысл перебирать возможные делители числа от единицы до корня от самого числа и, находя очередной делитель, прибавлять к переменной numDel 2. Также заметим, что поскольку число должно иметь три нетривиальных делителя, можно рассматривать только числа, квадратной корень из которых равен целому числу. Также отдельно будем учитывать квадратный корень числа, накапливая при этом в переменной numDel единицу.","python":"for i in range(289123456, 389123457):\n    sqrti = i**0.5\n    numdel = 0\n    if round(sqrti) == sqrti:\n        maxdel = 1\n        for j in range(2, round(sqrti) - 1):\n            if i % j == 0:\n                if maxdel == 1: maxdel = i // j\n                numdel += 2\n        if numdel == 2: print(i, maxdel)\n"},{"id":"5","text":"Пусть M(N)  — пятый по величине делитель натурального числа N без учёта самого числа и единицы. Например, M(1000)  =  100.\nЕсли у числа N меньше 5 различных делителей, не считая единицы и самого числа, считаем, что M(N)  =  0.\nНайдите 5 наименьших натуральных чисел, превышающих 300 000 000, для которых M(N) > 0. В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.\n ","answer":"17\n1119403\n151\n16666667\n27272728","description":"Будем последовательно рассматривать каждое целое число, большее 300 000 000. В каждом таком числе будем находить наименьшие шесть натуральных делителей. Если у числа есть по крайней мере пять делителей, не считая единицы и самого числа, будем выводить результат деления числа на пятый найденный делитель.","python":"count = 0\ni = 300000001\nwhile count < 5:\n    halfI = i // 2\n    countDel = 0\n    for j in range(2, halfI + 1):\n        if i % j == 0:\n            countDel += 1\n            if countDel == 5:\n                print(i // j)\n                count += 1\n                break\n    i += 1\n"},{"id":"6","text":"Напишите программу, которая перебирает целые числа, большие 600 000, в порядке возрастания и ищет среди них такие, среди делителей которых есть хотя бы одно число, оканчивающееся на 7, но не равное 7 и самому числу. Необходимо вывести первые 5 таких чисел, и наименьший делитель, оканчивающийся на 7, не равный 7 и самому числу.\nФормат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число, затем  — наименьший делитель, оканчивающийся на 7, не равный 7 и самому числу. Строки выводятся в порядке возрастания найденных чисел.\nКоличество строк в таблице для ответа избыточно.","answer":"600001 437\n600002 47\n600003 1227\n600005 217\n600012 16667","description":"Будем последовательно рассматривать каждое целое число, большее 600000. В каждом таком числе будем перебирать делители числа, проверяя, оканчивается ли делитель на 7 и равен ли он числу 7. Встречая первый делитель числа, удовлетворяющий условиям задачи, будем выводить на экран число и этот делитель, а также останавливать перебор делителей очередного числа, поскольку первый встреченный делитель, удовлетворяющий условию задачи, и будет минимальным.","python":"count = 0\ni = 600001\nwhile count < 5:\n    halfI = i // 2\n    for j in range(2, halfI + 1):\n        if i % j == 0 and j % 10 == 7 and j != 7:\n            print(i, ' ', j)\n            count += 1\n            break\n    i += 1\n"},{"id":"7","text":"Найдите все натуральные числа N, принадлежащие отрезку [200 000 000; 400 000 000], которые можно представить в виде N  =  2m · 3n, где m  — чётное число, n  — нечётное число. В ответе запишите все найденные числа в порядке возрастания.","answer":"201326592\n229582512\n254803968\n322486272","description":"Решим задачу перебором. Сгенерируем числа, подходящие под условия задачи. Массив arr2 заполним числами, которые являются чётными степенями двойки, т. е. 20, 22, 24 и т. д. А массив arr3 заполним числами, которые являются нечётными степенями тройки, т. е. 31, 33, 35 и т. д. Теперь будем последовательно перемножать элементы массивов arr2 и arr3 и искать такие результаты произведения, которые будут лежать в отрезке [200 000 000; 400 000 000], эти числа будем записывать в массив answer. После нахождения всех возможных чисел, удовлетворяющих условию задачи, отсортируем массив answer по возрастанию и выведем на экран все элементы этого массива, отличные от нуля.","python":"for m in range(0, 31, 2):\n    for n in range(1, 19, 2):\n        if(200000000 <= 2 ** m * 3 ** n <= 400000000):\n            print(2 ** m * 3 ** n)\n"},{"id":"8","text":"Рассмотрим произвольное натуральное число, представим его всеми возможными способами в виде произведения двух натуральных чисел и найдём для каждого такого произведения разность сомножителей. Например, для числа 16 получим: 16  =  16*1  =  8*2  =  4*4, множество разностей содержит числа 15, 6 и 0. Найдите все натуральные числа, принадлежащие отрезку [1 000 000; 2 000 000], у которых составленное описанным способом множество разностей будет содержать не меньше трёх элементов, не превышающих 100. В ответе перечислите найденные числа в порядке возрастания.","answer":"1113840\n1179360\n1208844\n1499400","description":"Заметим, что у каждого делителя числа имеется пара, например, пары делителей числа 16 будут выглядеть так: 1 и 16, 2 и 8, 4 и 4, всего пять различных делителей. Отсюда можно заключить, что имеет смысл перебирать возможные делители числа от единицы до корня от самого числа. Если разность результата целочисленного деления рассматриваемого в данный момент числа на его найденный делитель и этого делителя не будет превышать 100, в переменной count будем накапливать единицу. Если число count после работы вложенного цикла будет не меньше трёх  — выводим число на экран.","python":" for i in range(1000000, 2000001):\n    c = 0\n    for d in range(int(i ** (0.5)), 899, -1):\n        if(i % d == 0):\n            if(abs(i / d - d) <= 100):\n                c += 1\n        if c > 2:\n            print(i)\n            break\n"},{"id":"9","text":"Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [245 690; 245 756] простые числа. Выведите на экран все найденные простые числа в порядке возрастания, слева от каждого числа выведите его порядковый номер в последовательности. Каждая пара чисел должна быть выведена в отдельной строке.\nНапример, в диапазоне [5; 9] ровно два различных натуральных простых числа  — это числа 5 и 7, поэтому для этого диапазона вывод на экране должна содержать следующие значения:\n1 5\n3 7\n \nПримечание. Простое число  — натуральное число, имеющее ровно два различных натуральных делителя  — единицу и самого себя.","answer":"22 245711\n30 245719\n34 245723\n52 245741\n58 245747\n64 245753","description":"Решим задачу перебором. Будем проверять количество делителей каждого числа из диапазона, если их количество равно двум  — выводим пару чисел на экран.","python":"def f(x):\n    k=2\n    deliteli=set()\n    while k*k<=x:\n        if x%k==0:\n            deliteli.add(k)\n            if x//k<x:\n                deliteli.add(x//k)\n        k=k+1\n    return sorted(deliteli)\nstart=245690\nend=245757\nn=0\nfor i in range(start,end+1):\n    n=n+1\n    if len(f(i))==0:\n        print(n,i)\n"},{"id":"10","text":"Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [2422000; 2422080], простые числа. Выведите все найденные простые числа в порядке возрастания, слева от каждого числа выведите его номер по порядку, считая, что первое найденное число имеет номер «1», второе  — «2», и т. д.","answer":"1 2422027\n2 2422033\n3 2422037\n4 2422073","description":"Решим задачу перебором. Будем проверять в цикле количество делителей. Количество найденных простых чисел записываем в переменную count. Функцию isPrime будем использовать для определения простых чисел.","python":"a = 2422000\nb = 2422080\nm = 0\nfor i in range(a,b+1):\n    k = 0\n    for j in range(2,i//2+1):\n        if i%j==0:\n            k+=1\n            break\n    if k==0:\n        m += 1\n        print(m,i)\n"},{"id":"11","text":"Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [95632; 95650], числа, имеющие ровно шесть различных нечётных натуральных делителей (при этом количество четных делителей может быть любым). Для каждого найденного числа запишите эти шесть делителей в шесть соседних столбцов на экране с новой строки. Делители в строке должны следовать в порядке возрастания.\nНапример, в диапазоне [2; 48] ровно шесть нечётных различных натуральных делителей имеет число 45, поэтому для этого диапазона вывод на экране должна содержать следующие значения: 1 3 5 9 15 45;\nв диапазоне [480; 489] ровно шесть нечётных различных натуральных делителей имеет число 486, поэтому для этого диапазона вывод на экране должна содержать следующие значения: 1 3 9 27 81 243.","answer":"1 3 9 10627 31881 95643\n1 7 49 61 427 2989\n1 5 25 1913 9565 47825","description":"Решим задачу перебором. Будем проверять количество делителей каждого числа из диапазона, если их количество равно шесть  — записываем их в двумерный массив d. После этого выводим эти делители на экран в новой строке.","python":"for num in range(95632, 95651):\n    deliteli = []\n    for d in range(1, int(num**0.5) + 1):\n        if num % d == 0:\n            if d % 2 != 0:\n                deliteli.append(d)\n            if num // d != d and num // d % 2 != 0:\n                deliteli.append(num // d)\n    if len(deliteli) == 6:\n        deliteli.sort()\n        print(deliteli[0], deliteli[1], deliteli[2], deliteli[3], deliteli[4], deliteli[5])\n"},{"id":"12","text":"Пусть M  — сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа. Если таких делителей у числа нет, то значение M считается равным нулю.\nНапишите программу, которая перебирает целые числа, бо́льшие 700 000, в порядке возрастания и ищет среди них такие, для которых значение M оканчивается на 8. Выведите первые пять найденных чисел и соответствующие им значения M.\nФормат вывода: для каждого из пяти таких найденных чисел в отдельной строке сначала выводится само число, затем  — значение М.\nСтроки выводятся в порядке возрастания найденных чисел.\n \nКоличество строк в таблице для ответа избыточно.","answer":"700005 233338\n700007 100008\n700012 350008\n700015 140008\n700031 24168","description":"Заметим, что у каждого числа делители парные, например, у числа 8 это 1 и 8, 2 и 4. Будем находить первый натуральный делитель числа, отличный от единицы, и проверять, делится ли сумма найденного делителя с его парным делителем на 10 с остатком 8. Если условие выполняется  — выводим исходное число и сумму его парных минимального и максимального делителей на экран и выходим из цикла для перебора делителей числа, иначе сразу выходим из цикла для перебора делителей числа.","python":"count_del = 0\ni = 700_000\nwhile count_del < 5:\n    i += 1\n    for j in range(2, int(i ** 0.5) + 1):\n        if i % j == 0:\n            if i / j == i:\n                break\n            if (i / j + j) % 10 == 8:\n                print(i, i // j + j)\n                count_del += 1\n            break\n"},{"id":"13","text":"Назовём нетривиальным делителем натурального числа его делитель, не равный единице и самому числу. Например, у числа 6 есть два нетривиальных делителя: 2 и 3. Найдите все натуральные числа, принадлежащие отрезку [123456789; 223456789] и имеющие ровно три нетривиальных делителя. Для каждого найденного числа запишите в ответе его наибольший нетривиальный делитель. Ответы расположите в порядке возрастания.\nНапример, в диапазоне [5; 16] ровно три различных нетривиальных делителя имеет число 16, поэтому для этого диапазона вывод на экране должна содержать следующие значения:\n16 8","answer":"131079601 1225043\n141158161 1295029\n163047361 1442897","description":"Если решать задачу перебором  — программа будет существенно неэффективна по времени. Заметим, что у каждого делителя числа имеется пара, например, пары делителей числа 16 будут выглядеть так: 1 и 16, 2 и 8, 4 и 4, всего пять различных делителей. Отсюда можно заключить, что имеет смысл перебирать возможные делители числа от единицы до корня от самого числа и, находя очередной делитель, прибавлять к переменной numDel 2. Также заметим, что поскольку число должно иметь три нетривиальных делителя, можно рассматривать только числа, квадратной корень из которых равен целому числу. Также отдельно будем учитывать квадратный корень числа, накапливая при этом в переменной numDel единицу.","python":"maxi = 0 \nfor i in range(123456789, 223456790):\n    sqrti = i**0.5\n    numdel = 0\n    if round(sqrti) == sqrti:\n        maxdel = 1\n        for j in range(2, round(sqrti) - 1):\n            if i % j == 0:\n                if maxdel == 1: maxdel = i // j\n                numdel += 2\n        if numdel == 2: print(i, maxdel)\n"},{"id":"14","text":"Найдите все натуральные числа, принадлежащие отрезку [106 000 000; 107 000 000], у которых ровно три различных чётных делителя. В ответе перечислите найденные числа в порядке возрастания.","answer":"106084178\n106492418\n106784498\n106842962","description":"Заметим, что, поскольку необходимо найти чётные делители числа, можно не рассматривать нечётные числа из диапазона. Если число чётное, то 1 четный делитель у него уже есть, поэтому переменную count будем объявлять со значением 1. Находя очередной делитель числа, будем проверять, является ли этот делитель чётным, и, если является, будем прибавлять к переменной count единицу. Также заметим, что у каждого делителя числа есть парный делитель  — если он чётный, будем прибавлять к переменой count единицу. Также учтём то, что у числа может быть 2 одинаковых делителя (например, у числа 4 два одинаковых делителя  — числа 2 и 2).","python":"for i in range(106000000, 107000000 + 1):\n    count = 1\n    sqrtI = round(i ** 0.5)\n    if i % 2 == 0:\n        for j in range(2, sqrtI + 1):\n            if i % j == 0:\n                if j % 2 == 0:\n                    count += 1\n            if i % j == 0:\n                if (i // j) % 2 == 0:\n                    count += 1\n            if (j * j == i) and (j % 2 == 0):\n                count -= 1\n            if count > 3:\n                break\n    if count == 3:\n        print(i)\n        count = 1\n"},{"id":"15","text":"Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [120115; 120200], число, имеющее максимальное количество различных натуральных делителей, если таких чисел несколько  — найдите максимальное из них. Выведите на экран количество делителей такого числа и само число.\nНапример, в диапазоне [80; 90] максимальное количество различных натуральных делителей имеет число 90, поэтому для этого диапазона вывод на экране должна содержать следующие значения:\n12 90","answer":"128 120120","description":"Решим задачу перебором. Будем проверять количество делителей каждого числа из диапазона, если их количество наибольшее  — записываем количество делителей и само число в заранее объявленные переменные. После этого выводим эти числа на экран.","python":"maxi = 0\nfor i in range(120115, 120201):\n    numdel = 0\n    for j in range(1, i + 1):\n        if i % j == 0:\n            numdel += 1\n    if numdel >= maxi:\n        maxi = numdel\n        maxinum = i\nprint(maxi, maxinum)\n"},{"id":"16","text":"Найдите все натуральные числа N, принадлежащие отрезку [400 000 000; 600 000 000], которые можно представить в виде N  =  2m · 3n, где m  — чётное число, n  — нечётное число. В ответе запишите все найденные числа в порядке возрастания.","answer":"408146688\n452984832\n516560652\n573308928","description":"Решим задачу перебором. Сгенерируем числа, подходящие под условия задачи. Массив arr2 заполним числами, которые являются чётными степенями двойки, т. е. 20, 22, 24 и т. д. А массив arr3 заполним числами, которые являются нечётными степенями тройки, т. е. 31, 33, 35 и т. д. Теперь будем последовательно перемножать элементы массивов arr2 и arr3 и искать такие результаты произведения, которые будут лежать в отрезке [400 000 000; 600 000 000], эти числа будем записывать в массив answer. После нахождения всех возможных чисел, удовлетворяющих условию задачи, отсортируем массив answer по возрастанию и выведем на экран все элементы этого массива, отличные от нуля.","python":"for j in range(400000000, 600000000 + 1):\n    i = j\n    m = 0\n    n = 0\n    while i % 2 == 0:\n        i //= 2\n        m += 1\n    if m % 2 == 0:\n        while i % 3 == 0:\n            i //= 3\n            n += 1\n    if n % 2 != 0 and i == 1:\n        print(j)\n"},{"id":"17","text":"Найдите все натуральные числа, принадлежащие отрезку [35 000 000; 40 000 000], у которых ровно пять различных нечётных делителей (количество чётных делителей может быть любым). В ответе перечислите найденные числа в порядке возрастания.","answer":"35819648\n38950081\n39037448\n39337984","description":"Решим задачу перебором. Находя очередной делитель числа, будем проверять, является ли этот делитель нечётным, и, если является, будем прибавлять к переменной count единицу. Также заметим, что у каждого делителя числа есть парный делитель  — если он нечётный, будем прибавлять к переменой count единицу. Также учтём то, что у числа может быть 2 одинаковых делителя (например, у числа 9 два одинаковых делителя  — числа 3 и 3).","python":"for i in range(101000000, 102000000 + 1):\n    if i % 2 == 0:\n        count = 1\n        sqrtI = round(i ** 0.5)\n        for j in range(2, sqrtI + 1):\n            if i % j == 0:\n                if j % 2 == 0:\n                    count += 1\n                k = i // j\n                if k % 2 == 0:\n                    count += 1\n                    if j == k:\n                        count -= 1\n                if count > 3:\n                    break\n        if count == 3:\n            print(i)\n"},{"id":"18","text":"Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [84052; 84130], число, имеющее максимальное количество различных натуральных делителей, если таких чисел несколько  — найдите минимальное из них. Выведите на экран количество делителей такого числа и само число.\nНапример, в диапазоне [2; 48] максимальное количество различных натуральных делителей имеет число 48, поэтому для этого диапазона вывод на экране должна содержать следующие значения:\n10 48","answer":"72 84084","description":"Решим задачу перебором. Будем проверять количество делителей каждого числа из диапазона, если их количество наибольшее  — записываем количество делителей и само число в заранее объявленные переменные. После этого выводим эти числа на экран.","python":"maxi = 0 \nfor i in range(84052, 84131):\n    numdel = 0\n    for j in range(1, i + 1):\n        if i % j == 0:\n            numdel += 1\n    if numdel > maxi:\n        maxi = numdel\n        mini = i\nprint(maxi, mini)\n"},{"id":"19","text":"Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [110203; 110245], числа, имеющие ровно четыре различных чётных натуральных делителя (при этом количество нечётных делителей может быть любым). Для каждого найденного числа запишите эти четыре делителя в четыре соседних столбца на экране с новой строки. Делители в строке должны следовать в порядке возрастания.\nНапример, в диапазоне [2; 16] ровно четыре чётных различных натуральных делителя имеют числа 12 и 16, поэтому для этого диапазона вывод на экране должна содержать следующие значения:\n2 4 6 12\n2 4 8 16","answer":"2 4 55102 110204\n2 14 15746 110222\n2 6 36742 110226\n2 22 10022 110242","description":"Решим задачу перебором. Будем проверять количество делителей каждого числа из диапазона, если их количество равно четырём  — записываем их в двумерный массив d. После этого выводим эти делители на экран в новой строке.","python":"for num in range(110203, 110246):\n    deliteli = []\n    for d in range(1, int(num**0.5) + 1):\n        if num % d == 0:\n            if d % 2 == 0:\n                deliteli.append(d)\n            if num//d != d and num//d % 2 == 0:\n                deliteli.append(num//d)\n    if len(deliteli) == 4:\n        deliteli.sort()\n        print(deliteli[0],deliteli[1],deliteli[2],deliteli[3])\n"},{"id":"20","text":"Пусть M(N)  — пятый по величине делитель натурального числа N без учёта самого числа и единицы. Например, M(1000)  =  100.\nЕсли у числа N меньше 5 различных делителей, не считая единицы и самого числа, считаем, что M(N)  =  0.\nНайдите 5 наименьших натуральных чисел, превышающих 460 000 000, для которых M(N) > 0. В ответе запишите найденные значения M(N) в порядке возрастания соответствующих им чисел N.","answer":"41818182\n261959\n5\n271\n57500001","description":"Будем последовательно рассматривать каждое целое число, большее 460 000 000. В каждом таком числе будем находить наименьшие шесть натуральных делителей. Если у числа есть по крайней мере пять делителей, не считая единицы и самого числа, будем выводить результат деления числа на пятый найденный делитель.","python":"count = 0\ni = 460000001\nwhile count < 5:\n    halfI = i // 2\n    countDel = 0\n    for j in range(2, halfI + 1):\n        if i % j == 0:\n            countDel += 1\n            if countDel == 5:\n                print(i // j)\n                count += 1\n                break\n    i += 1"}]}