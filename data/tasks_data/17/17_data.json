{"tasks":[{"id":"1","text":"Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000. Назовём тройкой три идущих подряд элемента последовательности. Определите количество троек чисел таких, которые могут являться сторонами прямоугольного треугольника. В ответе запишите два числа: сначала количество найденных троек, а затем  — максимальную сумму элементов таких троек. Если таких троек не найдётся  — следует вывести 0 0.","answer":"0 0","description":"Заметим, что треугольник является прямоугольным, если квадрат длины гипотенузы треугольника будет равен сумме квадратов длин катетов этого треугольника. Решим задачу перебором.","python":"count = m = 0\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 2):\n    l1 = sorted([l[i], l[i + 1], l[i + 2]])\n    if l1[2]**2 == (l1[1]**2 + l1[0]**2):               \n        count += 1\n        m = max(m, sum(l1))\nprint(count, m)\n"},{"id":"2","text":"В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, у которых разность элементов кратна 60, затем максимальную из разностей элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.","answer":"832722 9960","description":"Сначала считаем все числа из файла в массив. Для каждой пары будем проверять, кратна ли 60 разность элементов пары. Если разность элементов кратна 60, будем увеличивать значения счётчика count и проверять, больше ли разность элементов пары текущей максимальной разности. Если разность элементов пары больше текущей максимальной разности, будем обновлять значение переменной maxdif.","python":"s = []\nf = open('17.txt')\nfor l in f:\n    s.append(int(l))\ncount = 0\nd = 0\nfor i in range(len(s) - 1):\n    for k in range(i + 1, len(s)):\n        if (s[i] - s[k]) % 60 == 0:\n            count += 1\n            if d < abs(s[k] - s[i]):\n                d = abs(s[k] - s[i])\nprint(count, d)\n"},{"id":"3","text":"В файле содержится последовательность целых чисел. Элементы последовательности могут принимать целые значения от −10 000 до 10 000 включительно. Определите количество пар последовательности, в которых только одно число оканчивается на 3, а сумма квадратов элементов пары не меньше квадрата максимального элемента последовательности, оканчивающегося на 3. В ответе запишите два числа: сначала количество найденных пар, затем максимальную из сумм квадратов элементов таких пар. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.","answer":"180 190360573","description":"Считаем числа из файла. Сначала найдём максимальное по модулю число, заканчивающееся на «3», и его квадрат запишем в переменную max_square. Далее пройдём по всей последовательности чисел, рассматривая каждые два соседних числа. Будем проверять, что только одно из них кончается цифрой «3», а также что их сумма квадратов не меньше значения переменной max_square. Если пара чисел будет удовлетворять условию, будем увеличивать значения счётчика count, а также в переменную max_square_sum записывать максимальную сумму квадратов.","python":"f = open('17.txt')\nnums = [int(i) for i in f]\nmax_square_sum = count =max_elem= 0\nfor x in nums:\n    if x % 10 ==3:\n        max_elem=max(max_elem, x)\nfor i in range(len(nums) - 1):\n    check_suf = (abs(nums[i]) % 10 == 3 and abs(nums[i + 1]) %10 != 3) or (abs(nums[i]) %10 != 3 and abs(nums[i + 1]) % 10  == 3)\n    if check_suf and nums[i] ** 2 + nums[i + 1] ** 2 >= max_elem**2:\n        count += 1\n        max_square_sum = max(max_square_sum, nums[i] ** 2 + nums[i + 1] ** 2)\nprint(count, max_square_sum)\n"},{"id":"4","text":"В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, разность которых четна и хотя бы одно из чисел делится на 31, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.","answer":"1569269 19982","description":"Сначала считаем все числа из файла в массив. Для каждой пары будем проверять, делится ли хотя бы одно число из пары на 31, а также то, чётна ли разность элементов пары. При успешном выполнении условий будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.","python":"count = m = 0\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 1):\n    for j in range(i + 1, len(l)):\n        if (l[i] - l[j]) % 2 == 0 and (l[i] % 31 == 0 or l[j] % 31 == 0):\n            count += 1\n            m = max(m, l[i] + l[j])\nprint(count, m)\n"},{"id":"5","text":"В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, для которых произведение элементов делится без остатка на 10, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.","answer":"13510315 19999","description":"Сначала считаем все числа из файла в массив. Для каждой пары будем проверять, делится ли произведение элементов пары на 10 без остатка. При успешном выполнении условия будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.","python":"count = m = 0\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 1):\n    for j in range(i + 1, len(l)):\n        if l[i] * l[j] % 10 == 0:\n            count += 1\n            m = max(m, l[i] + l[j])\nprint(count, m)\n"},{"id":"6","text":"В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, для которых произведение элементов не кратно 14, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.","answer":"40436496 19999","description":"Сначала считаем все числа из файла в массив. Для каждой пары будем проверять, кратно ли 14 произведение элементов пары. Если произведение не кратно 14, будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.","python":"count = m = 0\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 1):\n    for j in range(i + 1, len(l)):\n        if l[i] * l[j] % 14 != 0:\n            count += 1\n            m = max(m, l[i] + l[j])\nprint(count, m)\n"},{"id":"7","text":"Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000. Назовём парой два идущих подряд элемента последовательности. Определите количество пар, в которых хотя бы один из двух элементов делится на 3, а их сумма делится на 5. В ответе запишите два числа: сначала количество найденных пар, а затем – максимальную сумму элементов таких пар.\nНапример, в последовательности (2 3 7 8 9) есть две подходящие пары: (2 3) и (3 7), в ответе для этой последовательности надо записать числа 2 и 10.","answer":"635 19730","description":"Решим задачу перебором.","python":"f=open('17_38951.txt')\nSum=0\nMx=0\nx=int(f.readline())\nfor y in f:\n    y=int(y)\n    if (((x+y)%5==0) and ((x%3==0) or (y%3==0))):\n        Sum += 1\n        Mx = max(Mx,x+y)\n    x=y\nprint(Sum,Mx)\n"},{"id":"8","text":"Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000. Назовём парой два идущих подряд элемента последовательности. Определите количество пар, в которых один из двух элементов делится на 5, а другой меньше среднего арифметического всех нечётных элементов последовательности. В ответе запишите два числа: сначала количество найденных пар, а затем  — максимальную сумму элементов таких пар.\nНапример, в последовательности (8 10 2 7 5 1) есть две подходящие пары: (10 2) и (5 1), в ответе для этой последовательности надо записать числа 2 и 12.","answer":"1061 14847","description":"Решим в два прохода. В первом проходе найдём среднее арифметическое значение всех нечётных элементов последовательности, а во втором проходе найдём количество пар и максимальную сумму элементов таких пар.","python":"with open(\"17.txt\") as f:\n    p = f.readlines()\n    summ = 0\n    kol = 0\n    for i in range(0, len(p)):\n        if int(p[i]) % 2 != 0:\n            summ += int(p[i])\n            kol += 1\n    summ //= kol\n    k = 0\n    maxx = -20000\n    for i in range(len(p) - 1):\n        a = int(p[i])\n        b = int(p[i + 1])\n        if (a % 5 == 0 and b < summ) or (b % 5 == 0 and a < summ):\n            k += 1\n            if a + b > maxx:\n                maxx = a + b\nprint(k, maxx)\n"},{"id":"9","text":"В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, для которых произведение элементов делится без остатка на 62, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.","answer":"2284645 19920","description":"Сначала считаем все числа из файла в массив. Для каждой пары будем проверять, делится ли произведение элементов пары на 62 без остатка. При успешном выполнении условия будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.","python":"count = m = 0\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 1):\n    for j in range(i + 1, len(l)):\n        if l[i] * l[j] % 62 == 0:\n            count += 1\n            m = max(m, l[i] + l[j])\nprint(count, m)\n"},{"id":"10","text":"В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, разность которых четна и хотя бы одно из чисел делится на 19, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.","answer":"2551262 19994","description":"Сначала считаем все числа из файла в массив. Для каждой пары будем проверять, делится ли хотя бы одно число из пары на 19, а также то, чётна ли разность элементов пары. При успешном выполнении условий будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.","python":"count = m = 0\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 1):\n    for j in range(i + 1, len(l)):\n        if (l[i] - l[j]) % 2 == 0 and (l[i] % 19 == 0 or l[j] % 19 == 0):\n            count += 1\n            m = max(m, l[i] + l[j])\nprint(count, m)\n"},{"id":"11","text":"В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, у которых сумма элементов кратна 120, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.","answer":"414830 19920","description":"Сначала считаем все числа из файла в массив. Для каждой пары будем проверять, кратна ли 120 сумма элементов пары. Если сумма элементов кратна 120, будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.","python":"count = m = 0\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 1):\n    for j in range(i + 1, len(l)):\n        if (l[i] + l[j]) % 120 == 0:\n            count += 1\n            m = max(m, l[i] + l[j])\nprint(count, m)\n"},{"id":"12","text":"В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, у которых сумма элементов кратна 10, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.","answer":"4999742 19990","description":"Сначала считаем все числа из файла в массив. Для каждой пары будем проверять, кратна ли 10 сумма элементов пары. Если сумма элементов кратна 10, будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.","python":"count = m = 0\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 1):\n    for j in range(i + 1, len(l)):\n        if (l[i] + l[j]) % 10 == 0:\n            count += 1\n            m = max(m, l[i] + l[j])\nprint(count, m)\n"},{"id":"13","text":"В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, у которых сумма элементов кратна 126, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.","answer":"397339 19908","description":"Сначала считаем все числа из файла в массив. Для каждой пары будем проверять, кратна ли 126 сумма элементов пары. Если сумма элементов кратна 126, будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.","python":"count = m = 0\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 1):\n    for j in range(i + 1, len(l)):\n        if (l[i] + l[j]) % 126 == 0:\n            count += 1\n            m = max(m, l[i] + l[j])\nprint(count, m)\n"},{"id":"14","text":"В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, у которых сумма нечётна, а произведение делится на 3, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.","answer":"13931722 19993","description":"Сначала считаем все числа из файла в массив. Для каждой пары будем проверять, кратно ли 3 произведение элементов пары и нечётна ли сумма элементов пары. Если произведение кратно 3, а сумма элементов нечётна, будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.","python":"count = m = 0\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 1):\n    for j in range(i + 1, len(l)):\n        if (l[i] + l[j]) %2 != 0 and (l[i] * l[j]) % 3 == 0:\n            count += 1\n            m = max(m, l[i] + l[j])\nprint(count, m)\n"},{"id":"15","text":"В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, у которых сумма элементов кратна 7, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.","answer":"7142586 19992","description":"Сначала считаем все числа из файла в массив. Для каждой пары будем проверять, кратна ли 7 сумма элементов пары. Если сумма элементов кратна 7, будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.","python":"count = m = 0\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 1):\n    for j in range(i + 1, len(l)):\n        if (l[i] + l[j]) % 7 == 0:\n            count += 1\n            m = max(m, l[i] + l[j])\nprint(count, m)\n"},{"id":"16","text":"Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000. Назовём парой два идущих подряд элемента последовательности. Определите количество пар, в которых хотя бы один из двух элементов делится на 3 и хотя бы один из двух элементов меньше среднего арифметического всех чётных элементов последовательности. В ответе запишите два числа: сначала количество найденных пар, а затем  — максимальную сумму элементов таких пар.\nНапример, в последовательности (3 8 9 4) есть две подходящие пары: (3 8) и (9 4), в ответе для этой последовательности надо записать числа 2 и 13.","answer":"2288 14875","description":"Решим задачу перебором.","python":"f = open('17.txt')\na = [int(i) for i in f]\ncount = 0\nmx = 0\ns = 0\nn = 0\nfor i in range(len(a)):\n    if (a[i] % 2 == 0):\n        s += a[i]\n        n += 1\nx = s / n\nfor i in range(len(a) - 1):\n    if ((a[i] % 3 == 0) or (a[i + 1] % 3 == 0)) and ((a[i] < x) or (a[i + 1] < x)):\n        count += 1\n        mx = max(mx, a[i] + a[i + 1])\nprint(count, mx)\n"},{"id":"17","text":"Файл содержит последовательность неотрицательных целых чисел, не превышающих 10 000. Назовём парой два идущих подряд элемента последовательности. Определите количество пар чисел, произведение которых кратно 15, а их сумма делится на 7. В ответе запишите два числа: сначала количество найденных пар, а затем  — максимальную сумму элементов таких пар.","answer":"170 18662","description":"Решим задачу перебором.","python":"count = m = 0\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 1):\n    if ((l[i] * l[i + 1]) % 15 == 0) and (l[i] + l[i + 1]) % 7 == 0:\n        count += 1\n        m = max(m, l[i] + l[i + 1])\nprint(count, m)\n"},{"id":"18","text":"В файле содержится последовательность из 10 000 натуральных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, у которых различные остатки от деления на d  =  160 и хотя бы одно из чисел делится на p  =  7, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.\nПример входных данных:\n168\n7\n320\n328\nПример выходных данных для приведённого выше примера входных данных:\n4 488\nПояснение: Из 4 чисел можно составить 6 пар. В данном случае условиям удовлетворяют пары: 168 и 320, 168 и 7, 320 и 7, 328 и 7. Максимальную сумму дает пара 168 и 320  — 488.","answer":"12749665 19989","description":"Сначала считаем все числа из файла в массив. Для каждой пары будем проверять, делится ли хотя бы одно число из пары на 7, а также то, имеют ли элементы пары различные остатки от деления на 160. При успешном выполнении условия будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.\n ","python":"f = open('17.txt')\na = [int(i) for i in f]\ns = 0\nmx = 0\nfor i in range(len(a) - 1):\n    for j in range(i + 1, len(a)):\n        if (a[i] % 160 != a[j] % 160) and ((a[i] % 7 == 0) or (a[j] % 7 == 0)):\n            s += 1\n            mx = max(mx, a[i] + a[j])\nprint(s, mx)\n"},{"id":"19","text":"В файле содержится последовательность натуральных чисел. Элементы последовательности могут принимать целые значения от 1 до 100 000 включительно. Определите количество пар последовательности, в которых хотя бы одно число делится на минимальный элемент последовательности, кратный 21. Гарантируется, что такой элемент в последовательности есть. В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.","answer":"126 171120","description":"Будем последовательно считывать числа из файла. Пройдём по всем числам из файла два раза. В первый проход найдём минимальный элемент последовательности, кратный 21. Во второй проход для каждой пары (двух подряд идущих элементов) будем проверять, делится ли хотя бы одно число из пары на минимальный элемент последовательности, кратный 21. При успешном выполнении условия будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.","python":"f = open(\"107_17.txt\")\ns = f.readlines() \nk = 0\nmin = 10000000\nmaxi = 0\nfor i in range(len(s)):\n    s[i] = int(s[i])\nfor i in range(len(s)):\n    if s[i] % 21 == 0 and s[i] < min:\n        min = s[i]\nfor i in range(len(s) - 1):\n    if (s[i] % min == 0) or (s[i + 1] % min == 0):\n        k += 1\n        maxi = max(maxi, s[i] + s[i + 1])\nprint(k, maxi)\n"},{"id":"20","text":"В файле содержится последовательность целых чисел. Элементы последовательности могут принимать целые значения от −10 000 до 10 000 включительно. Определите и запишите в ответе сначала количество пар элементов последовательности, в которых хотя бы одно число делится на 3, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два идущих подряд элемента последовательности. Например, для последовательности из пяти элементов: 6; 2; 9; –3; 6  — ответ: 4 11.","answer":"2802 1990","description":"Будем последовательно считывать числа из файла. Для каждой пары (двух подряд идущих элементов) будем проверять, делится ли хотя бы одно число из пары на 3. При успешном выполнении условия будем увеличивать значения счётчика count и проверять, больше ли сумма элементов пары текущей максимальной суммы. Если сумма элементов пары больше текущей максимальной суммы, будем обновлять значение переменной maxsum.","python":"count = 0\nm = -20001\nf = open('17.txt')\nl = [int(i) for i in f]\nfor i in range(len(l) - 1):\n    if (l[i] % 3 == 0) or (l[i + 1] % 3 == 0):\n        count += 1\n        m = max(m, l[i]+ l[i + 1])\nprint(count, m)"}]}